services:
  micro.services.acc:
    build:
      context: D:\repository\Diana\ACC.Backend\ACC.Micro
      dockerfile: Services/ACC/Micro.Services.ACC/Dockerfile
    container_name: micro.services.acc
    depends_on:
      mongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://mongodb:27017
    image: microservicesacc
    ports:
    - published: 8000
      target: 80
  micro.services.account:
    build:
      context: D:\repository\Diana\ACC.Backend\ACC.Micro
      dockerfile: Services/Account/Micro.Services.Account/Dockerfile
    container_name: micro.services.account
    depends_on:
      mongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://mongodb:27017
    image: microservicesaccount
    ports:
    - published: 8003
      target: 80
  micro.services.store:
    build:
      context: D:\repository\Diana\ACC.Backend\ACC.Micro
      dockerfile: Services/Store/Micro.Services.Store/Dockerfile
    container_name: micro.service.store
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: microservicesstore
    ports:
    - published: 8002
      target: 80
  mongodb:
    container_name: mongodb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
    - published: 5672
      target: 5672
    - published: 15672
      target: 15672
    restart: always
  sqltest:
    container_name: sql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: 123456MiM
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
    - published: 1433
      target: 1433
    restart: always
version: '3.4'
volumes:
  mongo_data: {}